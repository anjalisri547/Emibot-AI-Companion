{"version":3,"file":"static/js/313.789b83f6.chunk.js","mappings":"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","sources":["components/Community/CommunityLeaderProfile.jsx"],"sourcesContent":["\r\nimport { Helmet } from \"react-helmet\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport \"./CommunityLeader.css\";\r\nimport { db } from \"../../Firebaseconfig\"; // Firestore import\r\nimport { collection, addDoc, getDocs, query, orderBy, serverTimestamp } from \"firebase/firestore\";\r\n\r\nconst CommunityLeaderProfile = () => {\r\n  const [comments, setComments] = useState([]);\r\n  const [newComment, setNewComment] = useState(\"\");\r\n\r\n  // Fetch comments from Firestore on component mount\r\n  useEffect(() => {\r\n    const fetchComments = async () => {\r\n      try {\r\n        const q = query(collection(db, \"communityLeaderComments\"), orderBy(\"createdAt\", \"desc\"));\r\n        const snapshot = await getDocs(q);\r\n        const fetchedComments = snapshot.docs.map(doc => ({\r\n          id: doc.id,\r\n          ...doc.data(),\r\n        }));\r\n        setComments(fetchedComments);\r\n      } catch (error) {\r\n        console.error(\"Error fetching comments:\", error);\r\n      }\r\n    };\r\n    fetchComments();\r\n  }, []);\r\n\r\n  const handleCommentSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (newComment.trim() === \"\") return;\r\n\r\n    const commentData = {\r\n      name: \"Anonymous\", // optional: can add input for name\r\n      text: newComment.trim(),\r\n      createdAt: serverTimestamp(),\r\n    };\r\n\r\n    try {\r\n      const docRef = await addDoc(collection(db, \"communityLeaderComments\"), commentData);\r\n      setComments([{ id: docRef.id, ...commentData }, ...comments]);\r\n      setNewComment(\"\");\r\n    } catch (error) {\r\n      console.error(\"Error saving comment to Firebase:\", error);\r\n      alert(\"Failed to save comment. Check Firebase permissions.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n    <Helmet>\r\n  <title>Community Leader Profile | EmiBot AI Companion</title>\r\n  <meta name=\"description\" content=\"Learn more about our amazing community leaders.\" />\r\n</Helmet>\r\n    <div className=\"leader-page\">\r\n      <div className=\"leader-profile-container\">\r\n        {/* Profile Section */}\r\n        <div className=\"leader-header\">\r\n          <img \r\n            src=\"https://c4.wallpaperflare.com/wallpaper/32/829/286/male-celebrities-tom-cruise-wallpaper-preview.jpg\" \r\n            alt=\"Leader Profile\" \r\n            className=\"leader-photo\" \r\n          />\r\n          <h1 className=\"leader-name\">Alex Sharma</h1>\r\n          <p className=\"leader-role\">Community Leader</p>\r\n          \r\n          <div className=\"social-links\">\r\n            <a href=\"https://twitter.com/\" target=\"_blank\" rel=\"noreferrer\">Twitter</a>\r\n            <a href=\"https://linkedin.com/\" target=\"_blank\" rel=\"noreferrer\">LinkedIn</a>\r\n            <a href=\"https://github.com/\" target=\"_blank\" rel=\"noreferrer\">GitHub</a>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Summary Section */}\r\n        <div className=\"leader-summary\">\r\n          <h2>About the Leader</h2>\r\n          <p>\r\n            Alex has been at the forefront of building meaningful connections in our community. \r\n            They have organized events, mentorship programs, and interactive sessions \r\n            that empower members to collaborate and innovate together.\r\n          </p>\r\n        </div>\r\n\r\n        {/* Comments Section */}\r\n        <div className=\"leader-comments\">\r\n          <h2>Community Feedback</h2>\r\n          <ul>\r\n            {comments.map((c) => (\r\n              <li key={c.id}>\r\n                <strong>{c.name}:</strong> {c.text}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n\r\n          <form onSubmit={handleCommentSubmit} className=\"comment-form\">\r\n            <textarea \r\n              placeholder=\"Leave your comment here...\"\r\n              value={newComment}\r\n              onChange={(e) => setNewComment(e.target.value)}\r\n            />\r\n            <button type=\"submit\">Post Comment</button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CommunityLeaderProfile;\r\n"],"names":["CommunityLeaderProfile","comments","setComments","useState","newComment","setNewComment","useEffect","async","q","query","collection","db","orderBy","fetchedComments","getDocs","docs","map","doc","_objectSpread","id","data","error","console","fetchComments","_jsxs","_Fragment","children","Helmet","_jsx","name","content","className","src","alt","href","target","rel","c","text","onSubmit","e","preventDefault","trim","commentData","createdAt","serverTimestamp","docRef","addDoc","alert","placeholder","value","onChange","type"],"sourceRoot":""}