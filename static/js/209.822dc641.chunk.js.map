{"version":3,"file":"static/js/209.822dc641.chunk.js","mappings":"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","sources":["components/Memory/Memory.jsx","components/Voivefeature/VoiceFeatures.jsx","components/Feature/Featuress.jsx"],"sourcesContent":["import React from \"react\";\r\nimport \"./Memory.css\";\r\n\r\nconst Memory = () => {\r\n  const cards = [\r\n    {\r\n      img: \"https://t4.ftcdn.net/jpg/04/11/50/99/360_F_411509944_NHQwlYfg1td6fBQyyHLdlfltmlv8cmAp.jpg\",\r\n      title: \"Pinning Key Facts\",\r\n      date: \"August 20, 2025\",\r\n      desc: \"You can pin significant information such as birthdays and favorite activities, enabling EmiBot to remember key details.\"\r\n    },\r\n    {\r\n      img: \"https://images.unsplash.com/photo-1522202176988-66273c2fd55f\",\r\n      title: \"Storing Conversations\",\r\n      date: \"August 20, 2025\",\r\n      desc: \"EmiBot stores your past conversations securely, allowing it to recall important context and details.\"\r\n    },\r\n    {\r\n      img: \"https://t4.ftcdn.net/jpg/14/23/60/73/360_F_1423607388_5peSA2L19ahf5jJbBZwLy2zhv8ztjb77.jpg\",\r\n      title: \"Seamless Contextual Recall\",\r\n      date: \"August 20, 2025\",\r\n      desc: \"With seamless contextual recall, EmiBot ensures that your chats feel continuous and connected.\"\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <div className=\"memory-section\">\r\n      <h1>Memory That Matters</h1>\r\n      <p className=\"subtitle\">\r\n        Discover how EmiBot retains important details for a more meaningful connection.\r\n      </p>\r\n      <div className=\"memory-grid\">\r\n        {cards.map((card, index) => (\r\n          <div className=\"memory-card\" key={index}>\r\n            <img src={card.img} alt={card.title} />\r\n            <div className=\"card-content\">\r\n              <h3>{card.title}</h3>\r\n              <span className=\"date\">{card.date}</span>\r\n              <p>{card.desc}</p>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Memory;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { motion } from \"framer-motion\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport \"./VoiceFeatures.css\";\r\n\r\nconst VoiceFeatures = () => {\r\n  const [features, setFeatures] = useState([]);\r\n  const [voiceMode, setVoiceMode] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    fetch(\"http://localhost:5500/api/voicefeatures\")\r\n      .then((res) => res.json())\r\n      .then((data) => setFeatures(data))\r\n      .catch((err) => console.log(err));\r\n  }, []);\r\n\r\n  const handleAction = (actionType) => {\r\n    if (actionType === \"tts\") {\r\n      const msg = new SpeechSynthesisUtterance(\r\n        \"Hi! I'm EmiBot. Let's have a voice conversation!\"\r\n      );\r\n      window.speechSynthesis.speak(msg);\r\n    } else if (actionType === \"stt\") {\r\n      const SpeechRecognition =\r\n        window.SpeechRecognition || window.webkitSpeechRecognition;\r\n      if (!SpeechRecognition)\r\n        return alert(\"Your browser does not support Speech Recognition.\");\r\n      const recognition = new SpeechRecognition();\r\n      recognition.onresult = (event) => {\r\n        const transcript = event.results[0][0].transcript;\r\n        navigate(\"/voice-interaction\", { state: { transcript } });\r\n      };\r\n      recognition.start();\r\n    } else if (actionType === \"toggle\") {\r\n      setVoiceMode(!voiceMode);\r\n      alert(`Voice mode is now ${!voiceMode ? \"ENABLED\" : \"DISABLED\"}`);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"voice-section\">\r\n      <motion.h1\r\n        initial={{ opacity: 0, y: -20 }}\r\n        animate={{ opacity: 1, y: 0 }}\r\n      >\r\n        Interact with Your Voice\r\n      </motion.h1>\r\n\r\n      <motion.p\r\n        className=\"subtitle\"\r\n        initial={{ opacity: 0, y: 20 }}\r\n        animate={{ opacity: 1, y: 0 }}\r\n        style={{ color: \"white\" }}\r\n      >\r\n        Experience the freedom of voice interactions with EmiBot.\r\n      </motion.p>\r\n\r\n      {features.map((feature, i) => (\r\n        <motion.div\r\n          className={`feature-row ${i % 2 === 1 ? \"reverse\" : \"\"}`}\r\n          key={i}\r\n          initial={{ opacity: 0, x: i % 2 === 0 ? -100 : 100 }}\r\n          whileInView={{ opacity: 1, x: 0 }}\r\n          transition={{ duration: 0.8, delay: i * 0.2 }}\r\n          viewport={{ once: true }}\r\n        >\r\n          {feature.image && (\r\n            <motion.img\r\n              src={feature.image}\r\n              alt={feature.title}\r\n              whileHover={{ scale: 1.05 }}\r\n            />\r\n          )}\r\n          <motion.div className=\"feature-content\">\r\n            <h3>{feature.title}</h3>\r\n            <p>{feature.description}</p>\r\n            {feature.button && (\r\n              <motion.button\r\n                className=\"voice-btn\"\r\n                onClick={() => handleAction(feature.actionType)}\r\n                whileHover={{ scale: 1.1 }}\r\n                whileTap={{ scale: 0.95 }}\r\n              >\r\n                {feature.button}\r\n              </motion.button>\r\n            )}\r\n          </motion.div>\r\n        </motion.div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VoiceFeatures;\r\n","import { Helmet } from \"react-helmet\";\r\nimport React from \"react\";\r\nimport \"./Featuress.css\";\r\nimport { motion } from \"framer-motion\";\r\nimport Memory from \"../Memory/Memory\";\r\nimport VoiceFeatures from \"../Voivefeature/VoiceFeatures\";\r\n\r\nconst Featuress = () => {\r\n  const featureVariants = {\r\n    hidden: { opacity: 0, y: 50 },\r\n    visible: (i) => ({\r\n      opacity: 1,\r\n      y: 0,\r\n      transition: { delay: i * 0.3, duration: 0.6, ease: \"easeOut\" }\r\n    })\r\n  };\r\n\r\n  const gridVariants = {\r\n    hidden: { opacity: 0, scale: 0.8 },\r\n    visible: (i) => ({\r\n      opacity: 1,\r\n      scale: 1,\r\n      transition: { delay: i * 0.2, duration: 0.6, ease: \"easeOut\" }\r\n    })\r\n  };\r\n\r\n  return (\r\n    <>\r\n    <Helmet>\r\n  <title>Features | EmiBot AI Companion</title>\r\n  <meta name=\"description\" content=\"Discover all features of Your App.\" />\r\n</Helmet>\r\n  <div class=\"body\">\r\n\r\n\r\n   \r\n\r\n    \r\n      {/* Features Section */}\r\n      <div className=\"features-section\">\r\n        {[\r\n          {\r\n            img: \"https://t4.ftcdn.net/jpg/04/11/50/99/360_F_411509944_NHQwlYfg1td6fBQyyHLdlfltmlv8cmAp.jpg\",\r\n            title: \"Natural Language Processing\",\r\n            desc: \"EmiBot utilizes advanced natural language processing to understand and respond to your queries in a conversational manner, making every interaction feel personal and engaging.\"\r\n          },\r\n          {\r\n            img: \"https://cdn.prod.website-files.com/666eb11a863bd950676f05ee/6784dce55be20890ac6aec38_Edge-AI----What-Is-an-Example-of-Contextual-Awareness-01.jpg\",\r\n            title: \"Contextual Awareness\",\r\n            desc: \"With contextual awareness, EmiBot remembers your previous discussions, allowing for a more coherent and relevant conversation flow.\"\r\n          },\r\n          {\r\n            img: \"https://media.istockphoto.com/id/1456618360/photo/nonstop-service-24-hr-concept-businessman-hand-holding-virtual-24-7-with-clock-on-hand-for.jpg?s=612x612&w=0&k=20&c=z05AD3X-RQDrArao9YwotjzyDhK-1lHtXiIRY2DXw8o=\",\r\n            title: \"24/7 Availability\",\r\n            desc: \"EmiBot is always available to chat, ensuring you receive support and companionship whenever you need it.\"\r\n          }\r\n        ].map((feature, index) => (\r\n          <motion.div\r\n            className={`feature-row ${index % 2 === 1 ? \"reverse\" : \"\"}`}\r\n            key={index}\r\n            variants={featureVariants}\r\n            initial=\"hidden\"\r\n            whileInView=\"visible\"\r\n            viewport={{ once: true, amount: 0.2 }}\r\n            custom={index}\r\n          >\r\n            <div className=\"feature-image\">\r\n              <img src={feature.img} alt={feature.title} />\r\n            </div>\r\n            <div className=\"feature-text\">\r\n              <h2 className=\"smoking-text\">{feature.title}</h2>\r\n\r\n              <p>{feature.desc}</p>\r\n            </div>\r\n          </motion.div>\r\n        ))}\r\n      </div>\r\n\r\n      {/* Personalize Section */}\r\n      <div className=\"personalize-section\">\r\n      <h1 style={{ color: \"white\" }}>Personalize Your Experience</h1>\r\n<p style={{ color: \"wheat\" }}>\r\n  Make EmiBot truly yours with customizable avatars and wallpapers.\r\n</p>\r\n\r\n\r\n        <div className=\"personalize-grid\">\r\n          {[\r\n            \"https://static.vecteezy.com/system/resources/previews/024/306/628/non_2x/talking-cute-robot-with-artificial-intelligence-concept-of-chatbot-ai-generated-image-photo.JPG\",\r\n            \"https://img.lovepik.com/photo/48011/3618.jpg_wh860.jpg\",\r\n            \"https://thumbs.dreamstime.com/b/phone-view-front-empty-screen-robot-hand-d-illustration-phone-view-front-robot-hand-101483599.jpg\",\r\n            \"https://blog.qburst.com/wp-content/uploads/2020/09/Conversational-AI-Chatbot-Architecture-Overview.png\",\r\n            \"https://plus.unsplash.com/premium_photo-1681010317870-44a7ca6f9bee?fm=jpg&q=60&w=3000\",\r\n            \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcR8J9GzvCfpopoBTMQYjXugr3qbpURZcktSrg&s\"\r\n          ].map((src, i) => (\r\n            <motion.div\r\n              className=\"grid-item\"\r\n              key={i}\r\n              variants={gridVariants}\r\n              initial=\"hidden\"\r\n              whileInView=\"visible\"\r\n              viewport={{ once: true, amount: 0.2 }}\r\n              custom={i}\r\n            >\r\n              <img src={src} alt={`Custom Avatar ${i + 1}`} />\r\n            </motion.div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n\r\n      <Memory />\r\n      <VoiceFeatures />\r\n      </div>\r\n    </>\r\n    \r\n  );\r\n};\r\n\r\nexport default Featuress;\r\n"],"names":["Memory","_jsxs","className","children","_jsx","img","title","date","desc","map","card","index","src","alt","VoiceFeatures","features","setFeatures","useState","voiceMode","setVoiceMode","navigate","useNavigate","useEffect","fetch","then","res","json","data","catch","err","console","log","motion","h1","initial","opacity","y","animate","p","style","color","feature","i","div","concat","x","whileInView","transition","duration","delay","viewport","once","image","whileHover","scale","description","button","onClick","actionType","msg","SpeechSynthesisUtterance","window","speechSynthesis","speak","SpeechRecognition","webkitSpeechRecognition","alert","recognition","onresult","event","transcript","results","state","start","handleAction","whileTap","Featuress","featureVariants","hidden","visible","ease","gridVariants","_Fragment","Helmet","name","content","class","variants","amount","custom"],"sourceRoot":""}