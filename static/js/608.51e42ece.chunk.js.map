{"version":3,"file":"static/js/608.51e42ece.chunk.js","mappings":"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","sources":["components/Feature/Features.jsx","components/chatbot/Chatbot.jsx","components/Memory/Memory.jsx","components/Voivefeature/VoiceFeatures.jsx","components/Feature/Featuress.jsx","components/Testimonials/Testimonials.jsx","components/Background/Background.jsx","components/Home/Home.jsx","pages/PageWrapper.jsx","components/Customize/Customize.jsx"],"sourcesContent":["import { Helmet } from \"react-helmet\";\r\nimport React from \"react\";\r\nimport \"./Features.css\";\r\n\r\nconst Features = () => {\r\n  return (\r\n   <><Helmet>\r\n     <title>Features | EmiBot AI Companion</title>\r\n     <meta name=\"description\" content=\"Discover all features of Your App.\" />\r\n   </Helmet>\r\n    <div className=\"features-page\">\r\n      <h1 className=\"features-title\">Key Features of EmiBot</h1>\r\n      <p className=\"features-subtitle\">\r\n        Discover the innovative features that make EmiBot an exceptional AI companion. \r\n        Each element is designed to improve your experience and keep you engaged.\r\n      </p>\r\n\r\n      <div className=\"feature\">\r\n        <img \r\n          src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTjmtcTkQGr1a8dbKBJBO4TV3sOZTVysO-PRw&s\"  // <-- replace with your actual image path\r\n          alt=\"Mood System\"\r\n          className=\"feature-img\"\r\n        />\r\n        <div className=\"feature-text\">\r\n          <h3>Mood System: Expressive Interactions</h3>\r\n          <p>\r\n            EmiBot's mood system allows the avatar to reflect emotional responses \r\n            through expression changes. This feature creates a more relatable and \r\n            engaging interaction, enhancing the overall user experience.\r\n          </p>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"feature\">\r\n        <img \r\n          src=\"https://images.unsplash.com/photo-1606819717115-9159c900370b?fm=jpg&q=60&w=3000&ixlib=rb-4.1.0&ixid=M3wxMjA3fDB8MHxzZWFyY2h8NHx8Z2FsbGVyeXxlbnwwfHwwfHx8MA%3D%3D\" // <-- replace with your actual image path\r\n          alt=\"Gallery\"\r\n          className=\"feature-img\"\r\n        />\r\n        <div className=\"feature-text\">\r\n          <h3>Gallery: Visual Customization</h3>\r\n          <p>\r\n            Personalize your EmiBot with a visual gallery that allows you to modify \r\n            appearances and keep your companion fresh and exciting.\r\n          </p>\r\n        </div>\r\n      </div>\r\n      <div className=\"feature\">\r\n        <img \r\n          src=\"https://info.stemscopes.com/hubfs/chatBot.png\" // <-- replace with your actual image path\r\n          alt=\"Voice Interaction\"\r\n          className=\"feature-img\"\r\n        />\r\n        <div className=\"feature-text\">\r\n          <h3>Smart Voice Interaction</h3>\r\n          <p>\r\n            Talk naturally with EmiBot using smart voice recognition. This hands-free \r\n            interaction makes your conversations smoother, faster, and more engaging — \r\n            just like talking to a real companion.\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Features;\r\n","import React, { useState } from \"react\";\r\nimport \"./Chatbot.css\";\r\nimport { db } from \"../../Firebaseconfig\";\r\nimport { collection, addDoc, Timestamp } from \"firebase/firestore\";\r\n\r\nconst Chatbot = () => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [message, setMessage] = useState(\"\");\r\n  const [chatLog, setChatLog] = useState([]);\r\n  const [userName, setUserName] = useState(\"\"); // store user's name\r\n\r\n  const predefinedQA = {\r\n    \"what can emibot do\": \"EmiBot can chat, suggest features, remember preferences, and help you connect with the community.\",\r\n    \"how do i customize emibot\": \"You can go to the Customize page and personalize your avatar, theme, and interactions.\",\r\n    \"is emibot safe for kids\": \"Yes, EmiBot is designed to provide safe, monitored interactions suitable for all users.\",\r\n    \"can emibot help me learn\": \"Absolutely! EmiBot can suggest learning resources, tips, and track your progress.\",\r\n    \"does emibot remember my preferences\": \"Yes, EmiBot stores your choices to provide personalized experiences.\"\r\n  };\r\n\r\n  const suggestedQuestions = Object.keys(predefinedQA);\r\n\r\n  const handleNext = async (customMessage = null) => {\r\n    const input = customMessage || message;\r\n    if (!input.trim()) return;\r\n\r\n    const userMessage = input.trim().toLowerCase();\r\n    let answer = \"\";\r\n\r\n    // Personalized greeting logic\r\n    if (userMessage === \"hi\" || userMessage === \"hello\" || userMessage.includes(\"how are you\")) {\r\n      answer = !userName\r\n        ? \"Hello! What's your name?\"\r\n        : `Hi ${userName}! I'm good, thank you. How about you?`;\r\n    } \r\n    else if (userMessage.startsWith(\"my name is\")) {\r\n      const name = input.trim().split(\"my name is\")[1]?.trim();\r\n      if (name) {\r\n        setUserName(name);\r\n        answer = `Nice to meet you, ${name}! How can I help you today?`;\r\n      } else {\r\n        answer = \"I didn't catch your name. Could you repeat it?\";\r\n      }\r\n    }\r\n    else if (!userName && /^[a-zA-Z]+$/.test(userMessage)) {\r\n      setUserName(input.trim());\r\n      answer = `Nice to meet you, ${input.trim()}! How can I help you today?`;\r\n    }\r\n    else {\r\n      // Keyword-based matching\r\n      if (userMessage.includes(\"emibot\") && userMessage.includes(\"do\"))\r\n        answer = predefinedQA[\"what can emibot do\"];\r\n      else if (userMessage.includes(\"customize\"))\r\n        answer = predefinedQA[\"how do i customize emibot\"];\r\n      else if (userMessage.includes(\"safe\") || userMessage.includes(\"kids\"))\r\n        answer = predefinedQA[\"is emibot safe for kids\"];\r\n      else if (userMessage.includes(\"learn\"))\r\n        answer = predefinedQA[\"can emibot help me learn\"];\r\n      else if (userMessage.includes(\"remember\") || userMessage.includes(\"preferences\"))\r\n        answer = predefinedQA[\"does emibot remember my preferences\"];\r\n      else\r\n        answer = \"Sorry, I don't have an answer for that yet. We'll get back to you!\";\r\n    }\r\n\r\n    console.log(\"User:\", input, \"Bot:\", answer);\r\n\r\n    setChatLog(prev => [...prev, { question: input, answer }]);\r\n    setMessage(\"\");\r\n\r\n    try {\r\n      await addDoc(collection(db, \"chatbotLogs\"), {\r\n        question: input,\r\n        answer,\r\n        timestamp: Timestamp.now(),\r\n      });\r\n    } catch (err) {\r\n      console.error(\"Error saving to Firebase:\", err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"chatbot-wrapper\">\r\n      {!isOpen && (\r\n        <button className=\"chatbot-toggle\" onClick={() => setIsOpen(true)}>\r\n          🤖\r\n        </button>\r\n      )}\r\n\r\n      {isOpen && (\r\n        <div className=\"chatbot-box\">\r\n          <div className=\"chatbot-header\">\r\n            <h4>Ask EmiBot AI anything!</h4>\r\n            <button className=\"close-btn\" onClick={() => setIsOpen(false)}>✕</button>\r\n          </div>\r\n\r\n          {/* Suggested Questions */}\r\n          <div className=\"chatbot-suggestions\">\r\n            {suggestedQuestions.map((q, idx) => (\r\n              <button \r\n                key={idx} \r\n                className=\"suggestion-btn\"\r\n                onClick={() => handleNext(q)}\r\n              >\r\n                {q}\r\n              </button>\r\n            ))}\r\n          </div>\r\n\r\n          <div className=\"chatbot-messages\">\r\n            {chatLog.map((chat, idx) => (\r\n              <div key={idx}>\r\n                <div className=\"chat-msg user\"><strong>You:</strong> {chat.question}</div>\r\n                <div className=\"chat-msg bot\"><strong>EmiBot:</strong> {chat.answer}</div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n\r\n          <div className=\"chatbot-input\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Type your question...\"\r\n              value={message}\r\n              onChange={(e) => setMessage(e.target.value)}\r\n              onKeyDown={(e) => e.key === \"Enter\" && handleNext()}\r\n            />\r\n            <button onClick={() => handleNext()}>ASK</button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chatbot;\r\n","import React from \"react\";\r\nimport \"./Memory.css\";\r\n\r\nconst Memory = () => {\r\n  const cards = [\r\n    {\r\n      img: \"https://t4.ftcdn.net/jpg/04/11/50/99/360_F_411509944_NHQwlYfg1td6fBQyyHLdlfltmlv8cmAp.jpg\",\r\n      title: \"Pinning Key Facts\",\r\n      date: \"August 20, 2025\",\r\n      desc: \"You can pin significant information such as birthdays and favorite activities, enabling EmiBot to remember key details.\"\r\n    },\r\n    {\r\n      img: \"https://images.unsplash.com/photo-1522202176988-66273c2fd55f\",\r\n      title: \"Storing Conversations\",\r\n      date: \"August 20, 2025\",\r\n      desc: \"EmiBot stores your past conversations securely, allowing it to recall important context and details.\"\r\n    },\r\n    {\r\n      img: \"https://t4.ftcdn.net/jpg/14/23/60/73/360_F_1423607388_5peSA2L19ahf5jJbBZwLy2zhv8ztjb77.jpg\",\r\n      title: \"Seamless Contextual Recall\",\r\n      date: \"August 20, 2025\",\r\n      desc: \"With seamless contextual recall, EmiBot ensures that your chats feel continuous and connected.\"\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <div className=\"memory-section\">\r\n      <h1>Memory That Matters</h1>\r\n      <p className=\"subtitle\">\r\n        Discover how EmiBot retains important details for a more meaningful connection.\r\n      </p>\r\n      <div className=\"memory-grid\">\r\n        {cards.map((card, index) => (\r\n          <div className=\"memory-card\" key={index}>\r\n            <img src={card.img} alt={card.title} />\r\n            <div className=\"card-content\">\r\n              <h3>{card.title}</h3>\r\n              <span className=\"date\">{card.date}</span>\r\n              <p>{card.desc}</p>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Memory;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { motion } from \"framer-motion\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport \"./VoiceFeatures.css\";\r\n\r\nconst VoiceFeatures = () => {\r\n  const [features, setFeatures] = useState([]);\r\n  const [voiceMode, setVoiceMode] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    fetch(\"http://localhost:5500/api/voicefeatures\")\r\n      .then((res) => res.json())\r\n      .then((data) => setFeatures(data))\r\n      .catch((err) => console.log(err));\r\n  }, []);\r\n\r\n  const handleAction = (actionType) => {\r\n    if (actionType === \"tts\") {\r\n      const msg = new SpeechSynthesisUtterance(\r\n        \"Hi! I'm EmiBot. Let's have a voice conversation!\"\r\n      );\r\n      window.speechSynthesis.speak(msg);\r\n    } else if (actionType === \"stt\") {\r\n      const SpeechRecognition =\r\n        window.SpeechRecognition || window.webkitSpeechRecognition;\r\n      if (!SpeechRecognition)\r\n        return alert(\"Your browser does not support Speech Recognition.\");\r\n      const recognition = new SpeechRecognition();\r\n      recognition.onresult = (event) => {\r\n        const transcript = event.results[0][0].transcript;\r\n        navigate(\"/voice-interaction\", { state: { transcript } });\r\n      };\r\n      recognition.start();\r\n    } else if (actionType === \"toggle\") {\r\n      setVoiceMode(!voiceMode);\r\n      alert(`Voice mode is now ${!voiceMode ? \"ENABLED\" : \"DISABLED\"}`);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"voice-section\">\r\n      <motion.h1\r\n        initial={{ opacity: 0, y: -20 }}\r\n        animate={{ opacity: 1, y: 0 }}\r\n      >\r\n        Interact with Your Voice\r\n      </motion.h1>\r\n\r\n      <motion.p\r\n        className=\"subtitle\"\r\n        initial={{ opacity: 0, y: 20 }}\r\n        animate={{ opacity: 1, y: 0 }}\r\n        style={{ color: \"white\" }}\r\n      >\r\n        Experience the freedom of voice interactions with EmiBot.\r\n      </motion.p>\r\n\r\n      {features.map((feature, i) => (\r\n        <motion.div\r\n          className={`feature-row ${i % 2 === 1 ? \"reverse\" : \"\"}`}\r\n          key={i}\r\n          initial={{ opacity: 0, x: i % 2 === 0 ? -100 : 100 }}\r\n          whileInView={{ opacity: 1, x: 0 }}\r\n          transition={{ duration: 0.8, delay: i * 0.2 }}\r\n          viewport={{ once: true }}\r\n        >\r\n          {feature.image && (\r\n            <motion.img\r\n              src={feature.image}\r\n              alt={feature.title}\r\n              whileHover={{ scale: 1.05 }}\r\n            />\r\n          )}\r\n          <motion.div className=\"feature-content\">\r\n            <h3>{feature.title}</h3>\r\n            <p>{feature.description}</p>\r\n            {feature.button && (\r\n              <motion.button\r\n                className=\"voice-btn\"\r\n                onClick={() => handleAction(feature.actionType)}\r\n                whileHover={{ scale: 1.1 }}\r\n                whileTap={{ scale: 0.95 }}\r\n              >\r\n                {feature.button}\r\n              </motion.button>\r\n            )}\r\n          </motion.div>\r\n        </motion.div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VoiceFeatures;\r\n","import { Helmet } from \"react-helmet\";\r\nimport React from \"react\";\r\nimport \"./Featuress.css\";\r\nimport { motion } from \"framer-motion\";\r\nimport Memory from \"../Memory/Memory\";\r\nimport VoiceFeatures from \"../Voivefeature/VoiceFeatures\";\r\n\r\nconst Featuress = () => {\r\n  const featureVariants = {\r\n    hidden: { opacity: 0, y: 50 },\r\n    visible: (i) => ({\r\n      opacity: 1,\r\n      y: 0,\r\n      transition: { delay: i * 0.3, duration: 0.6, ease: \"easeOut\" }\r\n    })\r\n  };\r\n\r\n  const gridVariants = {\r\n    hidden: { opacity: 0, scale: 0.8 },\r\n    visible: (i) => ({\r\n      opacity: 1,\r\n      scale: 1,\r\n      transition: { delay: i * 0.2, duration: 0.6, ease: \"easeOut\" }\r\n    })\r\n  };\r\n\r\n  return (\r\n    <>\r\n    <Helmet>\r\n  <title>Features | EmiBot AI Companion</title>\r\n  <meta name=\"description\" content=\"Discover all features of Your App.\" />\r\n</Helmet>\r\n  <div class=\"body\">\r\n\r\n\r\n   \r\n\r\n    \r\n      {/* Features Section */}\r\n      <div className=\"features-section\">\r\n        {[\r\n          {\r\n            img: \"https://t4.ftcdn.net/jpg/04/11/50/99/360_F_411509944_NHQwlYfg1td6fBQyyHLdlfltmlv8cmAp.jpg\",\r\n            title: \"Natural Language Processing\",\r\n            desc: \"EmiBot utilizes advanced natural language processing to understand and respond to your queries in a conversational manner, making every interaction feel personal and engaging.\"\r\n          },\r\n          {\r\n            img: \"https://cdn.prod.website-files.com/666eb11a863bd950676f05ee/6784dce55be20890ac6aec38_Edge-AI----What-Is-an-Example-of-Contextual-Awareness-01.jpg\",\r\n            title: \"Contextual Awareness\",\r\n            desc: \"With contextual awareness, EmiBot remembers your previous discussions, allowing for a more coherent and relevant conversation flow.\"\r\n          },\r\n          {\r\n            img: \"https://media.istockphoto.com/id/1456618360/photo/nonstop-service-24-hr-concept-businessman-hand-holding-virtual-24-7-with-clock-on-hand-for.jpg?s=612x612&w=0&k=20&c=z05AD3X-RQDrArao9YwotjzyDhK-1lHtXiIRY2DXw8o=\",\r\n            title: \"24/7 Availability\",\r\n            desc: \"EmiBot is always available to chat, ensuring you receive support and companionship whenever you need it.\"\r\n          }\r\n        ].map((feature, index) => (\r\n          <motion.div\r\n            className={`feature-row ${index % 2 === 1 ? \"reverse\" : \"\"}`}\r\n            key={index}\r\n            variants={featureVariants}\r\n            initial=\"hidden\"\r\n            whileInView=\"visible\"\r\n            viewport={{ once: true, amount: 0.2 }}\r\n            custom={index}\r\n          >\r\n            <div className=\"feature-image\">\r\n              <img src={feature.img} alt={feature.title} />\r\n            </div>\r\n            <div className=\"feature-text\">\r\n              <h2 className=\"smoking-text\">{feature.title}</h2>\r\n\r\n              <p>{feature.desc}</p>\r\n            </div>\r\n          </motion.div>\r\n        ))}\r\n      </div>\r\n\r\n      {/* Personalize Section */}\r\n      <div className=\"personalize-section\">\r\n      <h1 style={{ color: \"white\" }}>Personalize Your Experience</h1>\r\n<p style={{ color: \"wheat\" }}>\r\n  Make EmiBot truly yours with customizable avatars and wallpapers.\r\n</p>\r\n\r\n\r\n        <div className=\"personalize-grid\">\r\n          {[\r\n            \"https://static.vecteezy.com/system/resources/previews/024/306/628/non_2x/talking-cute-robot-with-artificial-intelligence-concept-of-chatbot-ai-generated-image-photo.JPG\",\r\n            \"https://img.lovepik.com/photo/48011/3618.jpg_wh860.jpg\",\r\n            \"https://thumbs.dreamstime.com/b/phone-view-front-empty-screen-robot-hand-d-illustration-phone-view-front-robot-hand-101483599.jpg\",\r\n            \"https://blog.qburst.com/wp-content/uploads/2020/09/Conversational-AI-Chatbot-Architecture-Overview.png\",\r\n            \"https://plus.unsplash.com/premium_photo-1681010317870-44a7ca6f9bee?fm=jpg&q=60&w=3000\",\r\n            \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcR8J9GzvCfpopoBTMQYjXugr3qbpURZcktSrg&s\"\r\n          ].map((src, i) => (\r\n            <motion.div\r\n              className=\"grid-item\"\r\n              key={i}\r\n              variants={gridVariants}\r\n              initial=\"hidden\"\r\n              whileInView=\"visible\"\r\n              viewport={{ once: true, amount: 0.2 }}\r\n              custom={i}\r\n            >\r\n              <img src={src} alt={`Custom Avatar ${i + 1}`} />\r\n            </motion.div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n\r\n      <Memory />\r\n      <VoiceFeatures />\r\n      </div>\r\n    </>\r\n    \r\n  );\r\n};\r\n\r\nexport default Featuress;\r\n","\r\nimport React, { useEffect, useState } from \"react\";\r\nimport \"./Testimonilas.css\";\r\n\r\nconst Testimonials = () => {\r\n  const [testimonials, setTestimonials] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetch(\"http://localhost:5500/api/testimonials\")\r\n      .then(res => res.json())\r\n      .then(data => setTestimonials(data))\r\n      .catch(err => console.error(\"Error fetching testimonials:\", err));\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"testimonials-section\">\r\n      <h1 className=\"testimonials-title\">What Our Users Are Saying</h1>\r\n      <p className=\"testimonials-subtitle\">\r\n        Hear from our community of users who have experienced the transformative \r\n        capabilities of EmiBot in their daily lives.\r\n      </p>\r\n\r\n      <div className=\"testimonials-grid\">\r\n        {testimonials.map((item, index) => (\r\n          <div className=\"testimonial-card\" key={index}>\r\n            <img src={item.image} alt={item.title} />\r\n            <h3>{item.title}</h3>\r\n            <p>{item.description}</p>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Testimonials;\r\n","// src/components/Background/Background.jsx\r\nimport React, { useEffect, useRef } from \"react\";\r\n\r\nconst Background = () => {\r\n  const canvasRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const canvas = canvasRef.current;\r\n    const ctx = canvas.getContext(\"2d\");\r\n\r\n    function resizeCanvas() {\r\n      canvas.width = canvas.parentElement.offsetWidth;\r\n      canvas.height = canvas.parentElement.offsetHeight;\r\n    }\r\n\r\n    resizeCanvas();\r\n    window.addEventListener(\"resize\", resizeCanvas);\r\n\r\n    const colors = [\"#FF7C4F\", \"#FFB26B\", \"#6C5DD3\", \"#36D1DC\", \"#FF3CAC\", \"#FFD700\", \"#00FFAA\"];\r\n    const waveCount = 5;\r\n    const waves = [];\r\n\r\n    for (let i = 0; i < waveCount; i++) {\r\n      waves.push({\r\n        yOffset: canvas.height / 2 + i * 40,\r\n        amplitude: 30 + Math.random() * 30,\r\n        wavelength: 150 + Math.random() * 100,\r\n        speed: 0.01 + Math.random() * 0.02,\r\n        phase: Math.random() * Math.PI * 2,\r\n        color: colors[i % colors.length],\r\n      });\r\n    }\r\n\r\n    function animate() {\r\n      // Black background\r\n      ctx.fillStyle = \"#000000\";\r\n      ctx.fillRect(0, 0, canvas.width, canvas.height);\r\n\r\n      waves.forEach(wave => {\r\n        wave.phase += wave.speed;\r\n\r\n        for (let x = 0; x < canvas.width; x += 6) {\r\n          const y = wave.yOffset + Math.sin((x / wave.wavelength) * Math.PI * 2 + wave.phase) * wave.amplitude;\r\n\r\n          // Multicolor glow\r\n          const gradient = ctx.createRadialGradient(x, y, 0, x, y, 6);\r\n          gradient.addColorStop(0, wave.color + \"FF\");   // opaque color at center\r\n          gradient.addColorStop(1, wave.color + \"55\");   // fading edge\r\n\r\n          ctx.fillStyle = gradient;\r\n          ctx.beginPath();\r\n          ctx.arc(x, y, 3, 0, Math.PI * 2);\r\n          ctx.fill();\r\n        }\r\n      });\r\n\r\n      requestAnimationFrame(animate);\r\n    }\r\n\r\n    animate();\r\n\r\n    return () => window.removeEventListener(\"resize\", resizeCanvas);\r\n  }, []);\r\n\r\n  return (\r\n    <canvas\r\n      ref={canvasRef}\r\n      style={{ \r\n        position: \"absolute\", \r\n        top: 0, \r\n        left: 0, \r\n        width: \"100%\", \r\n        height: \"100%\", \r\n        zIndex: -1 \r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Background;\r\n","\r\nimport { Helmet } from \"react-helmet\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Home.css\";\r\nimport Customize from \"../Customize/Customize\";\r\nimport Features from \"../Feature/Features\";\r\nimport Featuress from \"../Feature/Featuress\";\r\nimport Testimonials from \"../Testimonials/Testimonials\";\r\nimport Chatbot from \"../chatbot/Chatbot\"; // <-- Import the chatbot\r\nimport Footer from \"../Footer/Footer\";\r\nimport Background from \"../Background/Background\";\r\n\r\nconst Home = () => {\r\n  return (\r\n    <>\r\n    <Helmet>\r\n        <title>Home - EmiBot AI Companion</title>\r\n        <meta name=\"description\" content=\"Welcome to EmiBot — your AI companion that learns and grows with you!\" />\r\n        <meta name=\"keywords\" content=\"EmiBot, AI, chatbot, companion\" />\r\n      </Helmet>\r\n   \r\n    <div className=\"homepage\">\r\n      <header className=\"hero-section\">\r\n        <div className=\"overlay\">\r\n          \r\n          {/* Navbar stays at top */}\r\n            <Background />\r\n\r\n          {/* Hero content separately centered */}\r\n          <div className=\"hero-content\">\r\n            <h2 className=\"hero-subtitle\">\r\n              Experience the future of interaction with EmiBot, your intelligent companion \r\n              designed to enhance your daily life through engaging conversations \r\n              and personalized assistance.\r\n            </h2>\r\n            <h1 className=\"hero-title\">Welcome to EmiBot - Your AI Companion</h1>\r\n          \r\n             <a\r\n  href=\"https://wa.me/9569408420?text=Hi%20I%20want%20to%20chat%20about%20wedding%20photography\"\r\n  target=\"_blank\"\r\n  rel=\"noopener noreferrer\"\r\n  className=\"btn-primary\"\r\n>\r\n  ContactUs\r\n</a>\r\n          </div>\r\n\r\n        </div>\r\n      </header>\r\n      <div class=\"body\">\r\n      <Customize/>\r\n      \r\n      <Features/>\r\n      <Testimonials/>\r\n</div>\r\n      {/* Floating chatbot widget */}\r\n      <Chatbot /> \r\n      \r\n    </div>\r\n     </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import { motion } from \"framer-motion\";\r\n\r\nconst PageWrapper = ({ children }) => {\r\n  return (\r\n    <motion.div\r\n      initial={{ opacity: 0, y: 30 }}\r\n      animate={{ opacity: 1, y: 0 }}\r\n      exit={{ opacity: 0, y: -30 }}\r\n      transition={{ duration: 0.6, ease: \"easeOut\" }}\r\n    >\r\n      {children}\r\n    </motion.div>\r\n  );\r\n};\r\n\r\nexport default PageWrapper;\r\n","import { Helmet } from \"react-helmet\";\r\nimport React from \"react\";\r\nimport \"./Customize.css\";\r\nimport PageWrapper from \"../../pages/PageWrapper\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\nconst Customize = () => {\r\n  return (\r\n    <>\r\n    <Helmet>\r\n  <title>Customize Bot | EmiBot AI Companion</title>\r\n  <meta name=\"description\" content=\"Customize your chatbot profile, mood, and behavior.\" />\r\n</Helmet>\r\n  \r\n    <PageWrapper>\r\n    <div className=\"customize-section\">\r\n      <div className=\"customize-content\">\r\n        <h2>Customize Your Experience</h2>\r\n        <p>\r\n          EmiBot offers a range of customizable avatars and wallpapers. Tailor\r\n          the look of your bot and chat interface to reflect your unique style\r\n          and preferences, creating a more immersive experience.\r\n        </p>\r\n     <Link to=\"/featuress\" className=\"explore-btn\">\r\n  Explore Options\r\n</Link>\r\n\r\n      </div>\r\n\r\n      <div className=\"customize-image\">\r\n        <img src=\"https://cdn.fstoppers.com/styles/large-16-9/s3/lead/2022/12/openai-gpt-adobe-after-effects-creative-code-monitor.jpg\" alt=\"Customize EmiBot\" />\r\n      </div>\r\n    </div>\r\n    </PageWrapper>\r\n      </>\r\n  );\r\n};\r\n\r\nexport default Customize;\r\n"],"names":["Features","_jsxs","_Fragment","children","Helmet","_jsx","name","content","className","src","alt","Chatbot","isOpen","setIsOpen","useState","message","setMessage","chatLog","setChatLog","userName","setUserName","predefinedQA","suggestedQuestions","Object","keys","handleNext","async","input","arguments","length","undefined","trim","userMessage","toLowerCase","answer","includes","concat","startsWith","_input$trim$split$","split","test","console","log","prev","question","addDoc","collection","db","timestamp","Timestamp","now","err","error","onClick","map","q","idx","chat","type","placeholder","value","onChange","e","target","onKeyDown","key","Memory","img","title","date","desc","card","index","VoiceFeatures","features","setFeatures","voiceMode","setVoiceMode","navigate","useNavigate","useEffect","fetch","then","res","json","data","catch","motion","h1","initial","opacity","y","animate","p","style","color","feature","i","div","x","whileInView","transition","duration","delay","viewport","once","image","whileHover","scale","description","button","actionType","msg","SpeechSynthesisUtterance","window","speechSynthesis","speak","SpeechRecognition","webkitSpeechRecognition","alert","recognition","onresult","event","transcript","results","state","start","handleAction","whileTap","Featuress","featureVariants","hidden","visible","ease","gridVariants","class","variants","amount","custom","Testimonials","testimonials","setTestimonials","item","Background","canvasRef","useRef","canvas","current","ctx","getContext","resizeCanvas","width","parentElement","offsetWidth","height","offsetHeight","addEventListener","colors","waves","push","yOffset","amplitude","Math","random","wavelength","speed","phase","PI","fillStyle","fillRect","forEach","wave","sin","gradient","createRadialGradient","addColorStop","beginPath","arc","fill","requestAnimationFrame","removeEventListener","ref","position","top","left","zIndex","Home","href","rel","Customize","_ref","exit","PageWrapper","Link","to"],"sourceRoot":""}